<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
   http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- 整合mybatis,事件控制等配置不变 -->

    <!-- shiro 配置 -->
    <!-- 声明realm -->
    <bean id="myRealm" class="com.pc.realm.MyRealm">
        <property name="userService" ref="userServiceImpl"/>
        <property name="roleService" ref="roleServiceImpl"/>
        <property name="permissionService" ref="permissionServiceImpl"/>
        <!-- 密码匹配器 -->
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="sha-256"/>
                <property name="storedCredentialsHexEncoded" value="false"/>
                <property name="hashIterations" value="1000"/>
            </bean>
        </property>
    </bean>

    <!-- 记住我的Cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- rememberMe是cookie值中的key, value时用户名的密文
             cookie["rememberMe":"deleteMe"] 此cookie每次登陆后都会写出，用于清除之前的cookie
             cookie["rememberMe":username的密文] 此cookie也会在登录后出，用于记录最新的username
             (ops: 如上设计，既能保证每次登陆后重新记录cookie，也能保证切换账号时，记录最新账号
         -->
        <property name="name" value="rememberMe04"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="604800"/>
    </bean>

    <!-- 记住我管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- SecurityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <!-- 将sessionManager关联到SecurityManager -->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- shiroFilter 注入的核心对象 -->
    <!-- 生产SpringShiroFilter 持有shiro的过滤相关规则，可进行请求的过滤校验，校验请求是否合法 -->
    <bean id="shiroFilter04" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/user/login"/>
        <property name="unauthorizedUrl" value="/error.jsp"/>
        <property name="filterChainDefinitions">
            <value>
                /user/login/page = anon
                /user/login/logic = anon
                /user/query = authc, perms["user:query"]
                /user/update = authc,roles["manager", "seller"]
                /user/delete = authc,perms["user:update","user:delete"]
                /user/logout = logout
            </value>
        </property>
    </bean>

    <!-- 增加session管理相关配置 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!-- cookie 的 key = 'sid' -->
        <property name="name" value="JSESSIONID"/>
        <!-- 只允许HTTP请求访问cookie -->
        <property name="httpOnly" value="true"/>
        <!-- cookie过期时间， -1：存活一个会话，单位：秒  默认为-1 -->
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 默认值和配置中给出的一致，所以bean:sessionIdCookie可以省略 -->
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
        <property name="globalSessionTimeout" value="1800000" />
        <!-- 注册session的监听器  -->
        <property name="sessionListeners">
            <list>
                <bean class="com.pc.session.MySessionListener"/>
            </list>
        </property>
        <!-- session检测的时间间隔 -->
        <property name="sessionValidationInterval" value="10000000" />
    </bean>

</beans>
